# Copyright 2024 tison <wander4096@gmail.com>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: CI
on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

# Concurrency strategy:
#   github.workflow: distinguish this workflow from others
#   github.event_name: distinguish `push` event from `pull_request` event
#   github.event.number: set to the number of the pull request if `pull_request` event
#   github.run_id: otherwise, it's a `push` event, only cancel if we rerun the workflow
#
# Reference:
#   https://docs.github.com/en/actions/using-jobs/using-concurrency
#   https://docs.github.com/en/actions/learn-github-actions/contexts#github-context
concurrency:
  group: ${{ github.workflow }}-${{ github.event_name }}-${{ github.event.number || github.run_id }}
  cancel-in-progress: true

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: korandoru/hawkeye@v4
      - uses: Swatinem/rust-cache@v2
      - name: Check Clippy
        run: cargo clippy --tests --all-features --all-targets --workspace -- -D warnings
      - name: Check format
        run: cargo fmt --all --check

  test:
    name: Build and test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: Swatinem/rust-cache@v2
      - run: cargo build --workspace --all-features --bins --tests --examples --benches
      - name: Run tests
        run: cargo test --workspace -- --nocapture
      - name: Run benches
        run: cargo bench --workspace -- --test

  docker:
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, buildjet-4vcpu-ubuntu-2204-arm ]
    runs-on: ${{matrix.os}}
    name: Docker sanity check on ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Build and load
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          tags: hawkeye:ci
          outputs: type=docker
      - name: Save image
        run: docker save hawkeye:ci -o /tmp/hawkeye-${{matrix.os}}.tar
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: hawkeye-${{matrix.os}}
          path: /tmp/hawkeye-${{matrix.os}}.tar
      - name: Sanity check
        run: |
          cp action.yml action.yml.bak
          docker image inspect hawkeye:ci --format='{{.Size}}'
          docker run --rm -v $(pwd):/github/workspace hawkeye:ci -V
          docker run --rm -v $(pwd):/github/workspace hawkeye:ci check

  smoke:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    name: Smoke test on ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: Swatinem/rust-cache@v2
      - uses: ./
      - shell: bash
        run: |
          cargo run --bin hawkeye -- -V
          cargo run --bin hawkeye -- check

  required:
    name: Required
    runs-on: ubuntu-latest
    if: ${{ always() }}
    needs:
      - check
      - docker
      - smoke
      - test
    steps:
      - name: Guardian
        run: |
          if [[ ! ( \
                 "${{ needs.check.result }}" == "success" \
              && "${{ needs.docker.result }}" == "success" \
              && "${{ needs.smoke.result }}" == "success" \
              && "${{ needs.test.result }}" == "success" \
              ) ]]; then
            echo "Required jobs haven't been completed successfully."
            exit -1
          fi
