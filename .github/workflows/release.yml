# Copyright 2023 Korandoru Contributors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Release

on:
  push:
    branches: ['main']
    tags: ['v1.*']
  pull_request:
  workflow_dispatch:

jobs:
  build-docker-image:
    name: Build - ${{matrix.name}} - ${{matrix.arch}}
    strategy:
      matrix:
        runner: [buildjet-4vcpu-ubuntu-2204, buildjet-4vcpu-ubuntu-2204-arm]
        arch: [amd64, arm64]
        name: [hawkeye, hawkeye-native]
        file: [Dockerfile, Dockerfile.native]
        exclude:
          - name: hawkeye
            file: Dockerfile.native
          - name: hawkeye-native
            file: Dockerfile
          - runner: buildjet-4vcpu-ubuntu-2204
            arch: arm64
          - runner: buildjet-4vcpu-ubuntu-2204-arm
            arch: amd64
    runs-on: ${{ matrix.runner }}
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-buildx-action@v2
      - uses: docker/login-action@v2
        if: ${{ github.event_name != 'pull_request' }}
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository_owner }}/${{ matrix.name }}
          flavor: latest=false
          tags: type=sha,suffix=-${{ matrix.arch }}
      - uses: docker/build-push-action@v3
        with:
          context: .
          file: ./${{ matrix.file }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          push: ${{ github.event_name != 'pull_request' }}

  release-docker-image:
    name: Release Docker images - ${{matrix.name}}
    strategy:
      matrix:
        name: [hawkeye, hawkeye-native]
        file: [Dockerfile, Dockerfile.native]
        exclude:
          - name: hawkeye
            file: Dockerfile.native
          - name: hawkeye-native
            file: Dockerfile
    if: ${{ github.event_name != 'pull_request' }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    needs: [build-docker-image]
    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-buildx-action@v2
      - uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Docker meta
        id: sha
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository_owner }}/${{ matrix.name }}
          flavor: latest=false
          tags: type=sha
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository_owner }}/${{ matrix.name }}
          tags: |
            type=semver,pattern={{raw}}
            type=semver,pattern=v{{major}}
            type=sha,format=short
            type=edge,branch=main
      - name: Push manifest
        run: |
          for tag in ${{ steps.meta.outputs.tags }}; do
            echo "Preparing manifest for tag: $tag..."
            docker manifest create $tag --amend ${{ steps.sha.outputs.tags }}-amd64 --amend ${{ steps.sha.outputs.tags }}-arm64
            docker manifest inspect $tag
            docker manifest push $tag
          done
